{"version":3,"sources":["Assets/nothing.svg","Actions/index.js","Actions/types.js","Components/List.jsx","Components/TaskInput.jsx","Screens/Completed.jsx","Screens/All.jsx","Screens/Todos.jsx","history.js","Components/App.jsx","Reducers/index.js","Reducers/TodosReducer.js","Reducers/CompletedReducer.js","index.js"],"names":["module","exports","delete_todo","todo","payload","type","create_todo","delete_completed","task","create_completed","List","handleCheckbox","e","index","checked","target","props","completed","todos","handleDeleteTask","getColor","done","priority","list","this","length","className","src","nothing","alt","map","ele","key","onChange","style","float","onClick","renderList","React","Component","connect","state","TaskInput","created_at","completed_at","createTask","event","preventDefault","flag","forEach","alert","Date","console","log","setState","onSubmit","htmlFor","value","id","to","Completed","All","Todos","createBrowserHistory","App","history","path","exact","component","from","combineReducers","action","state_copy","filter","unshift","completed_task","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","ReduxThunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e9cb749b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nothing.78fd7a96.svg\";","import {\nDELETE_TODO\n,CREATE_TODO\n,DELETE_COMPLETED\n,CREATE_COMPLETED\n} from \"./types\";\n\n// delete todo\nexport const delete_todo = ( todo ) => ({\n        payload : todo,\n        type : DELETE_TODO\n});\n\n// create todo\nexport const create_todo = ( todo ) => ({\n        payload : todo,\n        type : CREATE_TODO\n});\n\n// delete completed\nexport const delete_completed = ( task ) => ({\n    payload: task,\n    type: DELETE_COMPLETED\n});\n\n// create completed\nexport const create_completed = ( task ) => ({\n    payload: task,\n    type: CREATE_COMPLETED\n});","export const DELETE_TODO = \"DELETE_TODO\"\nexport const CREATE_TODO = \"CREATE_TODO\"\nexport const DELETE_COMPLETED = \"DELETE_COMPLETED\"\nexport const CREATE_COMPLETED = \"CREATE_COMPLETED\"","// essentials\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport {create_todo, delete_todo, create_completed, delete_completed} from \"../Actions\";\n\nimport nothing from \"../Assets/nothing.svg\";\n\nclass List extends React.Component{\n\n    handleCheckbox = ( e, index ) => {\n        var checked = e.target.checked;\n        var task;\n        if(this.props.type === \"COMPLETED\"){\n            task = this.props.completed[index];\n            if(checked === false){\n                // uncomplete the task\n                // delete from completed\n                this.props.delete_completed(task);\n                // add to the todos\n                this.props.create_todo(task);\n            }\n        }\n        else{\n            task = this.props.todos[index];\n            if(checked === true){\n                // completing the task\n                // deleting from todos\n                this.props.delete_todo(task);\n                // adding to completed\n                this.props.create_completed(task);\n            }\n        }\n    } \n\n    handleDeleteTask = (index) => {\n        var task;\n        if(this.props.type === \"COMPLETED\"){\n            task = this.props.completed[index];\n            this.props.delete_completed(task);\n        }\n        else{\n            task = this.props.todos[index];\n            this.props.delete_todo(task);\n        }\n    }\n\n    getColor = task => {\n        let priorityColors = [\"text-red-500\", \"text-yellow-500\", \"text-blue-500\", \"text-green-500\"] ;\n        if(task.done){\n            return \"text-gray-500\";\n         } \n         else {\n             return priorityColors[task.priority-1];\n         }\n    }\n\n    renderList(){\n        var list;\n        if(this.props.type === \"COMPLETED\"){\n            list = this.props.completed;\n        }\n        else{\n            list = this.props.todos;\n        }\n        if(list.length === 0) {\n            return(\n                <div className=\" max-w-sm rounded overflow-hidden\">\n                    <img className=\"w-full\" src={nothing} alt=\"nothing\" />\n                </div>\n            );\n        } else {\n            // todo : here add color to the task based on the priority\n            return(\n                <ul>\n                    {list.map((ele, index) => (\n                        <div className=\"rounded overflow-hidden shadow-lg\">\n                            <li key={index} className=\"px-6 py-4 w-full\">\n                                <input type=\"checkbox\" checked={ele.done} onChange={e => this.handleCheckbox(e, index)}/>\n                                <span  className={`font-sans text-2xl ${this.getColor(ele)} px-3`}>{ele.task}</span>\n                                <span style={{float:'right'}} onClick = {() => this.handleDeleteTask(index)} className = \"content-end text-red-500 hover:text-red-800 cursor-pointer\">Delete</span>\n                            </li> \n                        </div>\n                    ))}\n                </ul>\n            )\n        }\n    }\n\n    render(){\n        return(\n            <div className=\"container mx-auto px-4\">\n                {this.renderList()}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {todos : state.todos, completed : state.completed}\n}\n\nexport default connect(mapStateToProps, {create_todo, delete_todo, create_completed, delete_completed})(List);","// essentials\nimport React from 'react';\nimport {Link} from 'react-router-dom';\nimport {connect} from 'react-redux';\n\n// action creators\nimport {create_todo} from \"../Actions\";\n\nclass TaskInput extends React.Component{\n    \n    state = {\n        task : \"\",\n        done : false,\n        created_at : null,\n        priority : 4,\n        completed_at : null\n    }\n\n    createTask = (event) => {\n        // to handle the form submit of creating a task\n        event.preventDefault();\n\n        // TC : we don't create empty task\n        if(this.state.task === \"\") return;\n\n        // TC : check if task already exists\n        var flag = true;\n        this.props.todos.forEach(todo => {\n            if(todo.task === this.state.task){\n                alert(\"The task already exists!\");\n                flag = false;\n                return;\n            }\n        })\n\n        if(flag === false){\n            this.setState({\n                task : \"\",\n                done : false,\n                created_at : null,  \n                priority : 4,\n                completed_at : null\n            });\n            return;\n        }\n\n        // immutability\n        let todo = { ...this.state, created_at : new Date()};\n        console.log(todo);\n        this.props.create_todo(todo);\n\n        this.setState({\n            task : \"\",\n            done : false,\n            created_at : null,\n            priority : 4,\n            completed_at : null\n        });\n    }\n    \n    render(){\n        return(\n                <form className=\"w-full bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4\" onSubmit={this.createTask}>\n                    <div className=\"flex flex-wrap -mx-3 mb-6\">\n                        <div className=\"w-full sm:w-2/3 px-3 mb-6\">\n                            <label \n                                className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" \n                                htmlFor=\"grid-first-name\">\n                                Task\n                            </label>\n                            <input \n                                className=\"shadow appearance-none border w-full rounded py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" \n                                type=\"text\" value={this.state.task} \n                                onChange={(e) => this.setState({task : e.target.value})}\n                            />\n                        </div>\n                        <div className=\"w-full sm:w-1/3 px-3 mb-6\">\n                            <label className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" htmlFor=\"grid-state\">\n                                Priority\n                            </label>\n                            <select \n                                className=\"block appearance-none bg-gray-200 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\" \n                                id=\"grid-state\"\n                                value = {this.state.priority}\n                                onChange = {(e) => this.setState({priority : e.target.value})}\n                            >\n                                <option value={1}>Priority 1</option>\n                                <option value={2}>Priority 2</option>\n                                <option value={3}>Priority 3</option>\n                                <option value={4}>Priority 4</option>\n                            </select>\n                        </div>\n                        <div className=\"sm:w-1/3 px-3 mb-6\">\n\n                            <button \n                                className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\" \n                                type=\"submit\">\n                                    Add Task +\n                            </button>\n                        </div>\n                    </div>\n                    <div className=\"container flex flex-wrap -mx-3 mb-2\">\n                        <div className=\"center w-1/3 px-3 mb-6\">\n                            <button className=\"bg-blue-500 hover:bg-blue-700 text-white text-center font-bold py-2 px-4 rounded-full\">\n                                <Link to=\"/todos\">\n                                    Todos\n                                </Link>\n                            </button>\n                        </div>\n                        <div className=\"center w-1/3 px-3 mb-6\">\n                            <button className=\"bg-blue-500 hover:bg-blue-700 text-white text-center font-bold py-2 px-4 rounded-full\">\n                                <Link to=\"/todos/all\">\n                                    All\n                                </Link>\n                            </button>\n                        </div>\n                        <div className=\"center w-1/3 px-3 mb-6\">\n                            <button className=\"bg-blue-500 hover:bg-blue-700 text-white text-center font-bold py-2 px-4 rounded-full\">\n                                <Link to=\"/todos/completed\">\n                                    Completed\n                                </Link>\n                            </button>\n                        </div>\n                    </div>\n                </form>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {todos : state.todos}\n}\n\nexport default connect(mapStateToProps, {create_todo})(TaskInput);\n","// essentials\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport {create_todo, delete_todo, create_completed, delete_completed} from \"../Actions\";\nimport List from \"../Components/List\";\nimport TaskInput from \"../Components/TaskInput\";\n\n// Renders the list of all the todos that are pending\nclass Completed extends React.Component{\n    render(){\n\n        return(\n            <>\n                <TaskInput />\n                <h1 className=\"font-sans text-3xl text-gray-800 text-center\">Completed</h1>\n                <List type=\"COMPLETED\"/>\n            </>\n        )\n    }\n}\n\nexport default connect(null, {create_todo, delete_todo, create_completed, delete_completed})(Completed);","// essentials\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport {create_todo, delete_todo, create_completed, delete_completed} from \"../Actions\";\nimport List from \"../Components/List\";\nimport TaskInput from \"../Components/TaskInput\";\n\n// renders the list of all the todos\nclass All extends React.Component{\n    state = {\n        task : \"\",\n        done : false,\n        created_at : null,\n        priority : 4,\n        completed_at : null\n    }\n\n    createTask = (event) => {\n        // to handle the form submit of creating a task\n        event.preventDefault();\n        let todo = { ...this.state, created_at : new Date()};\n        console.log(todo);\n        this.props.create_todo(todo);\n        this.setState({\n            task : \"\",\n            done : false,\n            created_at : null,\n            priority : 4,\n            completed_at : null\n        });\n    }\n    \n    render(){\n\n        return(\n            <>\n                <TaskInput />\n                <h1 className=\"font-sans text-3xl text-gray-800 text-center\">Todo</h1>\n                <List type=\"TODO\" />\n                <h1 className=\"font-sans text-3xl text-gray-800 text-center\">Completed</h1>\n                <List type=\"COMPLETED\" />\n            </>\n        )\n    }\n}\n\nexport default connect(null, {create_todo, delete_todo, create_completed, delete_completed})(All);","// essentials\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport {create_todo, delete_todo, create_completed, delete_completed} from \"../Actions\";\nimport List from \"../Components/List\";\nimport TaskInput from \"../Components/TaskInput\";\n\n// Renders the list of all the todos that are pending\nclass Todos extends React.Component{\n    render(){\n\n        return(\n            <>\n                <TaskInput />\n                <h1 className=\"font-sans text-3xl text-gray-800 text-center\">Todo</h1>\n                <List type=\"TODO\"/>\n            </>\n        )\n    }\n}\n\nexport default connect(null, {create_todo, delete_todo, create_completed, delete_completed})(Todos);","// To keep track of the browser history\nimport {createBrowserHistory} from  'history';\n\nexport default createBrowserHistory();","import React from 'react';\nimport {Router, Route, Switch, Redirect} from 'react-router-dom';\n\n// screens\nimport Completed from \"../Screens/Completed\";\nimport All  from \"../Screens/All\";\nimport Todos  from \"../Screens/Todos\";\n\n// styles\nimport \"../styles/output.css\";\n\n// history for router\nimport history from \"../history\";\n\nclass App extends React.Component{\n    render(){\n        return(\n            <>\n                <Router history={history}>\n                    <Switch>\n                        <Route path=\"/todos\" exact component={Todos} />\n                        <Route path=\"/todos/all\" exact component={All} />\n                        <Route path=\"/todos/completed\" exact component={Completed} />\n                        \n                        {/* to redirect intially to /todos */}\n                        <Redirect from=\"*\" to=\"/todos\" /> \n                    </Switch>\n                </Router>\n            </>\n        )\n    }\n}\n\nexport default App;","// combining all the reducers to a single reducer\n// defines the store schema\nimport {combineReducers} from 'redux';\n\n// reducers\nimport TodosReducer from \"./TodosReducer\";\nimport CompletedReducer from \"./CompletedReducer\";\n\nexport default combineReducers({\n    todos : TodosReducer,\n    completed : CompletedReducer\n});","import {\nDELETE_TODO\n,CREATE_TODO\n} from \"../Actions/types\";\n\n\nexport default (state = [], action) => {\n    var state_copy = [...state];\n    switch(action.type){\n        case DELETE_TODO : \n            state_copy = [...state];\n            return state_copy.filter((todo) => todo.task !== action.payload.task);\n        case CREATE_TODO : \n            state_copy = [...state];\n            if(action.payload.created_at !== null)\n                state_copy.unshift({ ...action.payload, done : false });\n            return state_copy;\n        default:\n            return state;\n    }\n}\n","import {\nDELETE_COMPLETED\n,CREATE_COMPLETED\n} from \"../Actions/types\";\n\n\nexport default (state = [], action) => {\n    var state_copy = [...state];\n    switch(action.type){\n        case DELETE_COMPLETED : \n            state_copy = [...state];\n            return state_copy.filter((completed_task) => completed_task.task !== action.payload.task);\n        case CREATE_COMPLETED : \n            state_copy = [...state];\n            if(action.payload.created_at !== null)\n                state_copy.unshift({ ...action.payload, done : true, completed_at : new Date() });\n            return state_copy;\n        default:\n            return state;\n    }\n}\n    ","// essentials\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n// App component has rendered all the routes\nimport App from './Components/App';\n\n// provider component makes the store available to the app\nimport { Provider } from 'react-redux';\n\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport ReduxThunk from 'redux-thunk';\nimport reducers from './Reducers';\n\n// configuring redux dev tools\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; \n\n// creating state store for redux\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(ReduxThunk)));\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>\n, document.getElementById('root'));"],"sourceRoot":""}